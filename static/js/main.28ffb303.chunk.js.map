{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getMovieByTitle","fetch","then","response","json","FindMovie","onMovieAdd","useState","query","setQuery","error","setError","setMovie","getMovie","a","movieFromServer","Response","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","classnames","autoComplete","value","onChange","event","target","onClick","App","data","updateMovies","some","film","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"mxEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,6CCRjC,SAASG,EAAgBd,GAC9B,OAAOe,MAAM,GAAD,OAHD,4CAGC,aAAgBf,IACzBgB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCGxB,IAAMC,EAAY,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACjBC,mBAAS,IADQ,mBACpCC,EADoC,KAC7BC,EAD6B,OAEjBF,oBAAS,GAFQ,mBAEpCG,EAFoC,KAE7BC,EAF6B,OAGjBJ,qBAHiB,mBAGpCV,EAHoC,KAG7Be,EAH6B,KAKrCC,EAAQ,uCAAG,WAAM3B,GAAN,eAAA4B,EAAA,sEACed,EAAgBd,GAD/B,UAGkB,WAF3B6B,EADS,QAGKC,SAHL,uBAIbJ,EAAS,MACTD,GAAS,GALI,0BAUfC,EAAS,CACP1B,MAAO6B,EAAgBE,MACvB9B,YAAa4B,EAAgBG,KAC7B9B,OAAQ2B,EAAgBI,OACxBpB,OAAQgB,EAAgBK,OACxB/B,QAAQ,8BAAD,OAAgC0B,EAAgBK,UAf1C,2CAAH,sDAmBd,OACE,oCACE,0BAAM9B,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQ+B,QAAQ,eAAjC,eAIA,yBAAK/B,UAAU,WACb,2BACEgC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZlC,UAAWmC,IAAW,QAAS,CAC7B,YAAaf,IAEfgB,aAAa,MACbC,MAAOnB,EACPoB,SAAU,SAACC,GACTpB,EAASoB,EAAMC,OAAOH,OACtBhB,GAAS,OAKdD,GACC,uBAAGpB,UAAU,kBAAb,yCAMJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEgC,KAAK,SACLhC,UAAU,kBACVyC,QAAS,kBAAMlB,EAASL,KAH1B,iBASF,yBAAKlB,UAAU,WACb,4BACEgC,KAAK,SACLhC,UAAU,oBACVyC,QAAS,WACPtB,EAAS,IACTH,EAAWT,KALf,sBAcLA,GACC,yBAAKP,UAAU,aACb,wBAAIA,UAAU,SAAd,WACA,kBAAC,EAAcO,M,OCvFZmC,EAAM,WAAO,IAAD,EACQzB,mBAAS0B,GADjB,mBAChBtC,EADgB,KACRuC,EADQ,KAevB,OACE,yBAAK5C,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CACEgB,WAnBS,SAACT,GACIF,EACjBwC,MAAK,SAAAC,GAAI,OAAIA,EAAKrC,SAAWF,EAAME,WAGpCmC,GAAa,SAAAG,GAAU,4BAClBA,GADkB,CAErBxC,aCXRyC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.28ffb303.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","// eslint-disable-next-line\nconst API_URL = `https://www.omdbapi.com/?apikey=859d9c7f&`;\n\nexport function getMovieByTitle(title) {\n  return fetch(`${API_URL}t=${title}`)\n    .then(response => response.json());\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport './FindMovie.scss';\n\nimport { getMovieByTitle } from '../../api/api';\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ onMovieAdd }) => {\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState(false);\n  const [movie, setMovie] = useState();\n\n  const getMovie = async(title) => {\n    const movieFromServer = await getMovieByTitle(title);\n\n    if (movieFromServer.Response === 'False') {\n      setMovie(null);\n      setError(true);\n\n      return;\n    }\n\n    setMovie({\n      title: movieFromServer.Title,\n      description: movieFromServer.Plot,\n      imgUrl: movieFromServer.Poster,\n      imdbId: movieFromServer.imdbID,\n      imdbUrl: `https://www.imdb.com/title/${movieFromServer.imdbID}`,\n    });\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classnames('input', {\n                'is-danger': error,\n              })}\n              autoComplete=\"off\"\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n                setError(false);\n              }}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => getMovie(query)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                setQuery('');\n                onMovieAdd(movie);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...movie} />\n        </div>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  onMovieAdd: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, updateMovies] = useState(data);\n\n  const addMovie = (movie) => {\n    const isDuplicate = movies\n      .some(film => film.imdbId === movie.imdbId);\n\n    if (!isDuplicate) {\n      updateMovies(prevMovies => ([\n        ...prevMovies,\n        movie,\n      ]));\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          onMovieAdd={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}